<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CanLite - Games Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <style>
        :root {
            --primary-color: #FF5733;
            --secondary-color: #c491f4;
            --tertiary-color: #20B2AA;
            --bg-color: #000;
            --text-color: #FFFFFF;
        }

        body {
            margin: 0;
            padding: 0;
            background-color: var(--bg-color);
            font-family: 'Poppins', sans-serif;
            color: var(--text-color);
            min-height: 100vh;
        }

        #particles-js {
            width: 100%;
            height: 100vh;
            position: fixed;
            top: 0;
            left: 0;
            z-index: -1;
        }

        .nav {
            display: flex;
            justify-content: space-evenly;
            align-items: center;
            padding: 5px;
            background-color: rgba(0, 0, 0, 0.8);
            box-shadow: 0 0 5px 2.5px var(--primary-color);
        }

        .logo {
            display: flex;
            align-items: center;
            cursor: pointer;
        }

        .logo img {
            width: 50px;
            border-radius: 50%;
        }

        .logo h3 {
            font-family: 'Poppins', sans-serif;
            font-size: 25px;
            margin-left: 5px;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color), var(--tertiary-color));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .time {
            margin-left: auto;
            color: var(--text-color);
            margin-right: 15px;
        }

        .nav-items {
            display: flex;
            justify-content: center;
            align-items: center;
            list-style-type: none;
            flex-grow: 1;
            margin: 0;
            padding: 0;
        }

        .nav-items li {
            margin-right: 20px;
        }

        .nav-items li:last-child {
            margin-right: 0;
        }

        .nav-items li a {
            color: var(--text-color);
            font-family: 'Poppins', sans-serif;
            text-decoration: none;
            cursor: pointer;
            font-size: 18px;
            transition: all 0.4s ease;
        }

        .nav-items li a:hover {
            background: linear-gradient(to right, var(--secondary-color), var(--tertiary-color));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .main-content {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .section {
            margin-bottom: 40px;
        }

        .section h2 {
            font-size: 32px;
            margin-bottom: 20px;
            background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
            text-align: center;
        }

        .games-grid {
            display: grid;
            gap: 15px;
            justify-content: center;
        }

        .top-games-grid {
            grid-template-columns: repeat(3, 1fr);
            max-width: 800px;
            margin: 0 auto 20px;
        }

        .top-games-small {
            grid-template-columns: repeat(5, 1fr);
            max-width: 1000px;
            margin: 0 auto;
        }

        .favorites-grid, .last-played-grid {
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            max-width: 800px;
            margin: 0 auto;
        }

        .game-card {
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            text-align: center;
            text-decoration: none;
            color: var(--text-color);
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .game-card:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 20px rgba(255, 87, 51, 0.3);
        }

        .game-card.large {
            padding: 20px;
        }

        .game-card.medium {
            padding: 15px;
        }

        .game-card.small {
            padding: 10px;
        }

        .game-card img {
            width: 100%;
            border-radius: 8px;
            margin-bottom: 10px;
        }

        .game-card.large img {
            height: 200px;
            object-fit: cover;
        }

        .game-card.medium img {
            height: 150px;
            object-fit: cover;
        }

        .game-card.small img {
            height: 120px;
            object-fit: cover;
        }

        .game-card h3 {
            margin: 0;
            font-size: 16px;
            font-weight: 600;
        }

        .game-card.large h3 {
            font-size: 20px;
        }

        .game-card.medium h3 {
            font-size: 18px;
        }

        .favorite-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.7);
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .favorite-btn:hover {
            background: rgba(255, 87, 51, 0.8);
        }

        .favorite-btn.favorited {
            background: var(--primary-color);
        }

        .empty-section {
            text-align: center;
            color: rgba(255, 255, 255, 0.6);
            font-style: italic;
            padding: 40px;
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            margin: 0 auto;
            max-width: 400px;
        }
    </style>
</head>
<body>
<!-- Navigation Bar -->
<div class="nav">
    <div class="logo">
        <img src="https://via.placeholder.com/50/FF5733/FFFFFF?text=CL" alt="CanLite">
        <h3>CanLite</h3>
    </div>
    <div class="nav-items">
        <li><a href="#"><span class="material-symbols-outlined">home</span> Home</a></li>
        <li><a href="#"><span class="material-symbols-outlined">stadia_controller</span> Games</a></li>
        <li><a href="#"><span class="material-symbols-outlined">language</span> Proxe</a></li>
        <li><a href="#"><span class="material-symbols-outlined">person</span>Partners</a></li>
        <li><a href="#"><span id="loginSpan" class="material-symbols-outlined">login</span>Login / Register</a></li>
    </div>
    <div class="time" id="time-clock"></div>
</div>

<div class="main-content">
    <!-- Top Games Section -->
    <div class="section">
        <h2>üî• Top Games</h2>

        <!-- Top 3 Games - Large Cards -->
        <div class="games-grid top-games-grid">
            <% topGamesFirst.forEach(function(game) { %>
                <a href="/play/<%= game.name %>" class="game-card large" style="display: block; text-decoration: none; color: inherit;">
                    <% if (game.prev) { %>
                        <img src="<%= game.prev %>" alt="<%= game.name %>">
                    <% } else { %>
                        <img src="/d/<%= encodeURIComponent(game.name.replace(/\//g, '')) %>.jpg" alt="<%= game.name %>">
                    <% } %>
                    <h3><%= game.name + " Unblocked"%></h3>
                </a>
            <% }); %>
        </div>

        <!-- Next 5 Games - Small Cards -->
        <div class="games-grid top-games-small">
            <% topGamesRest.forEach(function(game) { %>
                <a href="/play/<%= game.name %>" class="game-card small" style="display: block; text-decoration: none; color: inherit;">
                    <% if (game.prev) { %>
                        <img src="<%= game.prev %>" alt="<%= game.name %>">
                    <% } else { %>
                        <img src="/d/<%= encodeURIComponent(game.name.replace(/\//g, '')) %>.jpg" alt="<%= game.name %>">
                    <% } %>
                    <h3><%= game.name + " Unblocked"%></h3>
                </a>
            <% }); %>
        </div>
    </div>

    <!-- Your Favorites Section -->
    <div class="section">
        <h2>‚≠ê Your Favorites</h2>
        <div id="favorites-container">
            <div class="games-grid top-games-small" id="favorites-grid">
                <script>
                    function renderFavorites() {
                        const favorites = JSON.parse(localStorage.getItem('canlitefavorites') || []);
                        const favoritesGrid = document.getElementById('favorites-grid');
                        const noFavoritesMsg = document.getElementById('no-favorites-msg');

                        // Clear existing content
                        favoritesGrid.innerHTML = '';

                        // Show message if no favorites
                        if (favorites.length === 0) {
                            if (!noFavoritesMsg) {
                                favoritesGrid.innerHTML = '';
                            } else {
                                noFavoritesMsg.style.display = 'block';
                            }
                            return;
                        }

                        // Hide "no favorites" message
                        if (noFavoritesMsg) noFavoritesMsg.style.display = 'none';

                        // Create favorite items
                        favorites.forEach(gameSlug => {
                            const gameCard = document.createElement('a');
                            gameCard.className = 'game-card small';
                            gameCard.href = `/play/${gameSlug}`;
                            gameCard.style.display = 'block';
                            gameCard.style.textDecoration = 'none';
                            gameCard.style.color = 'inherit';

                            gameCard.innerHTML = `
            <img src="/api/img/${gameSlug}" alt="${gameSlug}">
            <h3>${gameSlug} Unblocked</h3>
        `;

                            favoritesGrid.appendChild(gameCard);
                        });
                    }
                    renderFavorites()
                </script>
            </div>
        </div>
    </div>
</div>

<!-- Background Particles -->
<div id="particles-js"></div>

<script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
<script>
    // Initialize particles
    particlesJS('particles-js', {
        particles: {
            number: { value: 80, density: { enable: true, value_area: 800 } },
            color: { value: '#FF5733' },
            shape: { type: 'circle' },
            opacity: { value: 0.5, random: false },
            size: { value: 3, random: true },
            line_linked: { enable: true, distance: 150, color: '#c491f4', opacity: 0.4, width: 1 },
            move: { enable: true, speed: 6, direction: 'none', random: false, straight: false, out_mode: 'out', bounce: false }
        },
        interactivity: {
            detect_on: 'canvas',
            events: { onhover: { enable: true, mode: 'repulse' }, onclick: { enable: true, mode: 'push' }, resize: true },
            modes: { grab: { distance: 400, line_linked: { opacity: 1 } }, bubble: { distance: 400, size: 40, duration: 2, opacity: 8, speed: 3 }, repulse: { distance: 200, duration: 0.4 }, push: { particles_nb: 4 }, remove: { particles_nb: 2 } }
        },
        retina_detect: true
    });

    // Update time
    function updateTime() {
        const now = new Date();
        const timeString = now.toLocaleTimeString();
        document.getElementById('time-clock').textContent = timeString;
    }
    setInterval(updateTime, 1000);
    updateTime();
</script>
</body>
</html>